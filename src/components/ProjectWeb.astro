---

export interface Props {
	name: string;
    details: string;
    stacks: Array<string>;
    image: string;
    alt: string;
    url: string;
}

 const { name, details, stacks, image, alt, url} = Astro.props;
---


<div class="bg-gray-900 p-5 md:w-4/12 flex flex-col">
    <div class="flex flex-col text-left mb-auto">
        <div class="w-full mb-5">
            <div class="flex justify-center">
               <img src={image} alt={alt} class="h-48 w-auto">
            </div>
        </div>
        <div class="my-auto mb-auto flex-grow-1">
            <h2 class="text-2xl font-bold mb-5">{name}</h2>
            <p class="mb-5">{details}</p>
            <div class="font-medium">Stacks Used</div>
            <ul class="pl-5">{stacks.map(stack => <li>-{stack}</li>)}</ul>
        </div>
    </div>
    <div class="justify-end self-end">
        <button class="view-site-button relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-yellow-200 via-amber-500 to-amber-700 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900">
            <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                <a href={url} target="_blank">Visit Website</a>
            </span>
          </button>
    </div>
</div>

<script>
    const buttons = document.querySelectorAll('.view-site-button')
    buttons.forEach(button => {
        button.addEventListener('click', () => {
            window.open(button.childNodes[1].childNodes[1]['href'], '_blank')
        })
    })
</script>