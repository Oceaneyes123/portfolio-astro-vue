---
import { Image } from 'astro:assets'
export interface Props {
	name: string;
    details: string;
    stacks: Array<string>;
    image: ImageMetadata;
    alt: string;
    url: string;
}

 const { name, details, stacks, image, alt, url} = Astro.props;
---


<div class="bg-gray-900 p-5 md:w-4/12 flex flex-col card rounded-3xl">
    <div class="flex flex-col text-left mb-auto">
        <div class="w-full mb-5">
            <div class="flex justify-center" data-aos="zoom-in"  data-aos-duration="2000" data-aos-anchor-placement="center-bottom">
               <Image src={image} width={1080} format="avif"  alt={alt} class="h-48 w-auto">
            </div>
        </div>
        <div class="my-auto mb-auto flex-grow-1">
            <h2 class="text-2xl font-bold mb-5">{name}</h2>
            <p class="mb-5">{details}</p>
            <div class="font-medium">Stacks Used</div>
            <ul class="pl-5">{stacks.map(stack => <li>-{stack}</li>)}</ul>
        </div>
    </div>
    <div class="justify-end self-end">
        <button class="view-site-button relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-yellow-200 via-amber-500 to-amber-700 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900">
            <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                <a href={url} target="_blank">Visit Website</a>
            </span>
          </button>
    </div>
</div>

<script>
    const buttons = document.querySelectorAll('.view-site-button')
    buttons.forEach(button => {
        button.addEventListener('click', () => {
            window.open(button.childNodes[1].childNodes[1]['href'], '_blank')
        })
    })
</script>

<style>
    .card {
        --elevation: 5;
        --epx: calc(var(--elevation) * 1px);
        
        /* these 2 shadows serve as a border for  0-1 elevation    */
        --shadow1: 0 0 1px rgba(0, 0, 0, .1);
        --shadow2: 0 1px 2px rgba(0, 0, 0, .08);
        
        --offset-y: calc(var(--epx) + 1px);
        --blur: calc(var(--epx) * 2);
        --spread: calc(var(--epx) * .3);
        --shadow3: 
            0 var(--offset-y) 
            var(--blur) 
            var(--spread) 
            rgba(0, 0, 0, 0.2);
        
        box-shadow: 
            var(--shadow1),
            var(--shadow2),
            var(--shadow3);


    }
</style>