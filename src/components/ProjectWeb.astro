---
import { Image } from 'astro:assets'
export interface Props {
	name: string;
    details: string;
    stacks: Array<string>;
    image: ImageMetadata;
    alt: string;
    url: string;
}

 const { name, details, stacks, image, alt, url} = Astro.props;
---


<div class="bg-gray-900 p-5 md:w-3/12 flex flex-col card rounded-3xl">
    <div class="flex flex-col text-left mb-auto">
        <div class="w-full mb-5">
            <div class="flex justify-center" data-aos="zoom-in"  data-aos-duration="2000" data-aos-anchor-placement="center-bottom">
               <Image src={image} width={1080} format="avif"  alt={alt} class="h-48 w-auto">
            </div>
        </div>
        <div class="my-auto mb-auto flex-grow-1">
            <h2 class="text-2xl font-bold mb-5 text-center">{name}</h2>
        </div>
    </div>
    <div class="justify-center flex gap-2">
        <button class="view-more-button relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-200 via-cyan-500 to-cyan-700 group-hover:from-cyan-200 group-hover:via-cyan-300 group-hover:to-cyan-200 dark:text-white dark:hover:text-gray-900">
            <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                View More
            </span>
        </button>
        <button class="view-site-button relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-yellow-200 via-amber-500 to-amber-700 group-hover:from-red-200 group-hover:via-red-300 group-hover:to-yellow-200 dark:text-white dark:hover:text-gray-900">
            <span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                <a href={url} target="_blank">Visit Website</a>
            </span>
        </button>
    </div>    <!-- Modal for project details -->
    <div id={`project-modal-${name.toLowerCase().replace(/\s+/g, '-')}`} class="fixed inset-0 bg-black bg-opacity-80 z-[100] hidden items-center justify-center" role="dialog" aria-modal="true">
        <div class="absolute inset-0 w-full h-full bg-transparent" data-modal-overlay></div>
        <div class="relative p-4 w-full h-full flex items-center justify-center pointer-events-none">
            <div class="bg-gray-900 rounded-lg p-8 max-w-4xl w-full max-h-[90vh] overflow-y-auto pointer-events-auto">
                <div class="flex justify-between items-start mb-6">
                    <h2 class="text-3xl font-bold text-white">{name}</h2>                    <button type="button" class="close-modal-button text-gray-400 hover:text-white bg-gray-800 hover:bg-gray-700 rounded-full p-2 ml-auto inline-flex items-center justify-center transition-colors duration-200" aria-label="Close modal">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <div class="space-y-6">
                    <div class="flex justify-center">
                        <Image src={image} width={1080} format="avif" alt={alt} class="rounded-lg max-h-[400px] w-auto object-contain">
                    </div>
                    <div class="text-white">
                        <p class="text-lg mb-4">{details}</p>
                        <div class="font-medium text-xl mb-2 text-left">Stacks Used</div>
                        <ul class="pl-5 space-y-1">
                            {stacks.map(stack => <li class="flex items-center">â€¢ {stack}</li>)}
                        </ul>
                    </div>
                    <div class="mt-6">
                        <a href={url} target="_blank" class="inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-white bg-amber-600 rounded-lg hover:bg-amber-700 focus:ring-4 focus:outline-none focus:ring-amber-300">
                            Visit Website
                            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script define:vars={{ name }}>
    const modalId = `project-modal-${name.toLowerCase().replace(/\s+/g, '-')}`;
    
    function initializeModal() {        const modal = document.getElementById(modalId);
        const viewMoreButton = modal.parentElement.querySelector('.view-more-button');
        const closeButton = modal.querySelector('.close-modal-button');
        const modalOverlay = modal.querySelector('[data-modal-overlay]');
        
        viewMoreButton.addEventListener('click', () => {
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            document.body.style.overflow = 'hidden';
        });
        
        function closeModal() {
            modal.classList.add('hidden');
            modal.classList.remove('flex');
            document.body.style.overflow = '';
        }
        
        closeButton.addEventListener('click', closeModal);
        
        // Handle clicks on the overlay
        modalOverlay.addEventListener('click', closeModal);
        
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && !modal.classList.contains('hidden')) {
                closeModal();
            }
        });
    }
    
    // Initialize the modal functionality
    initializeModal();
    
    // Keep the existing website button functionality
    const buttons = document.querySelectorAll('.view-site-button')
    buttons.forEach(button => {
        button.addEventListener('click', () => {
            window.open(button.querySelector('a').href, '_blank')
        })
    })
</script>

<style>
    .card {
        --elevation: 5;
        --epx: calc(var(--elevation) * 1px);
        
        /* these 2 shadows serve as a border for  0-1 elevation    */
        --shadow1: 0 0 1px rgba(0, 0, 0, .1);
        --shadow2: 0 1px 2px rgba(0, 0, 0, .08);
        
        --offset-y: calc(var(--epx) + 1px);
        --blur: calc(var(--epx) * 2);
        --spread: calc(var(--epx) * .3);
        --shadow3: 
            0 var(--offset-y) 
            var(--blur) 
            var(--spread) 
            rgba(0, 0, 0, 0.2);
        
        box-shadow: 
            var(--shadow1),
            var(--shadow2),
            var(--shadow3);


    }
</style>